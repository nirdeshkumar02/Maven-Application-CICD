@Library('maven-app-shared-library') _

pipeline{
    agent any 

    parameters{
        choice(name: 'action', choices: 'Create\nDelete', description: 'Choose Create/Destroy')
        string(name: 'AWSAccountId', description: "Give a tag to your docker image", defaultValue: '352709447472')
        string(name: 'ECRRepoName', description: "Enter Your AWS ECR Repo Name", defaultValue: 'maven-app')
        string(name: 'ECRRegion', description: "Enter the Region where AWS ECR Repo Exist", defaultValue: 'us-east-1')
    }

    stages{
        stage('Git Checkout'){
            //  When action is create then perform all operation otherwise no operation should be performed
            when {expression { params.action == 'Create'}} 
            steps{
                gitCheckout(
                    branch: "jenkins-shared-lib-pipeline",
                    url: "https://github.com/nirdeshkumar02/Maven-Application-CICD.git"
                )
            }
        }

        stage('Maven Unit Test'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{
                    mvnTest()
                }
            }
        }

        stage('Maven Integration Test'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{
                    mvnIntegration()
                }
            }
        }

        stage('SAST Testing - SonarQube'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{
                    def SonarCreds = 'sonar-creds'
                    sonarScanner(SonarCreds)
                }
            }
        }

        stage('Quality Gate Status Checking - SonarQube'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{
                    def SonarCreds = 'sonar-creds'
                    sonarQualityGate(SonarCreds)
                }
            }
        }

        stage('Building Maven Package: Maven'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{
                    mvnBuild()
                }
            }
        }

        stage('Build AWS ECR Image: Docker'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{ 
                    ecrImageBuild("${params.AWSAccountId}", "${params.ECRRepoName}", "${params.ECRRegion}")
                }
            }
        }

        stage('Scanning ECR Image: Trivy'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{ 
                    ecrImageScan("${params.AWSAccountId}", "${params.ECRRepoName}", "${params.ECRRegion}")
                }
            }
        }

        stage('ECR Image Push: Docker'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{ 
                    ecrImagePush("${params.AWSAccountId}", "${params.ECRRepoName}", "${params.ECRRegion}")
                }
            }
        }

        stage('ECR Image CleanUP: Docker'){
            when {expression { params.action == 'Create'}} 
            steps{
                script{ 
                    ecrImageCleanup("${params.AWSAccountId}", "${params.ECRRepoName}", "${params.ECRRegion}")
                }
            }
        }
    }
}